package cn.bjsxt.collection;

import java.util.ArrayList;
import java.util.List;

/**
 * 自己实现一个ArrayList,帮助我们更好地理解ArrayList类的低层结构。
 * @author houtingting
 *
 */
public class MyArrayList {

	private Object[] elementDate;
	private int size;
	
	public int size(){
		return size;
	}
	public MyArrayList(){
		this(10);//默认数组长度是10
	}
	
	public boolean isEmpty(){
		return size == 0;
	}
	public MyArrayList(int initialCapacity){
		if(initialCapacity < 0){
			try{
				throw new Exception();
			}catch(Exception e){
				e.printStackTrace();
			}
			
		}
		elementDate = new Object[initialCapacity];
	}
	
	public static void main(String[] args) {
//		List list = new ArrayList();
		MyArrayList list = new MyArrayList(3);
		list.add("333");
		list.add("444");
		list.add("555");
		list.add("333");
		list.add("333");
		list.add("333");
		System.out.println(list.size());
		System.out.println(list.isEmpty());
		System.out.println(list.get(3));
		System.out.println(list.get(6));
//		System.out.println(list.get(10));
	}

	public void add(Object obj){
		//数组扩容和数据的复制
		if(size+1 > elementDate.length){
			Object[] newArray = new Object[size*2 + 1];
			System.arraycopy(elementDate, 0, newArray, 0, elementDate.length);
			elementDate = newArray;
		}
		elementDate[size] = obj;
		size++;
	}
	
	public Object get(int index){
		if(index < 0 || index > size){
			try {
				throw new Exception();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		return elementDate[index];
	}
}
